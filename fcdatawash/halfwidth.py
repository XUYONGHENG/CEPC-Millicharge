import numpy as np

xBinning = np.linspace(60.0, 85.0, 101, endpoint=True)

# Creating data sequence: middle of each bin
xData = np.array(
    [60.125, 60.375, 60.625, 60.875, 61.125, 61.375, 61.625, 61.875, 62.125, 62.375, 62.625, 62.875, 63.125, 63.375,
     63.625, 63.875, 64.125, 64.375, 64.625, 64.875, 65.125, 65.375, 65.625, 65.875, 66.125, 66.375, 66.625, 66.875,
     67.125, 67.375, 67.625, 67.875, 68.125, 68.375, 68.625, 68.875, 69.125, 69.375, 69.625, 69.875, 70.125, 70.375,
     70.625, 70.875, 71.125, 71.375, 71.625, 71.875, 72.125, 72.375, 72.625, 72.875, 73.125, 73.375, 73.625, 73.875,
     74.125, 74.375, 74.625, 74.875, 75.125, 75.375, 75.625, 75.875, 76.125, 76.375, 76.625, 76.875, 77.125, 77.375,
     77.625, 77.875, 78.125, 78.375, 78.625, 78.875, 79.125, 79.375, 79.625, 79.875, 80.125, 80.375, 80.625, 80.875,
     81.125, 81.375, 81.625, 81.875, 82.125, 82.375, 82.625, 82.875, 83.125, 83.375, 83.625, 83.875, 84.125, 84.375,
     84.625, 84.875])

# Creating weights for histo: y1_E_0
y1_E_0_weights = np.array(
    [1.484875e-07, 3.563699e-07, 1.484875e-07, 2.375799e-07, 2.672774e-07, 2.078824e-07, 3.563699e-07, 3.563699e-07,
     7.127398e-07, 1.484875e-07, 3.563699e-07, 2.078824e-07, 2.672774e-07, 2.078824e-07, 4.157649e-07, 2.375799e-07,
     1.781849e-07, 1.781849e-07, 2.969749e-07, 2.375799e-07, 2.672774e-07, 2.078824e-07, 3.266724e-07, 2.375799e-07,
     2.078824e-07, 1.484875e-07, 2.078824e-07, 1.1879e-07, 2.672774e-07, 3.266724e-07, 2.969749e-07, 1.781849e-07,
     3.266724e-07, 2.375799e-07, 3.266724e-07, 1.1879e-07, 4.157649e-07, 2.672774e-07, 3.860674e-07, 9.503197e-07,
     1.930337e-06, 3.207329e-06, 7.068003e-06, 1.568028e-05, 2.84502e-05, 5.119847e-05, 8.321237e-05, 0.0001279071,
     0.0001774425, 0.0002310168, 0.0002751473, 0.0003106061, 0.000318565, 0.0003073393, 0.0002706035, 0.0002252852,
     0.0001803529, 0.0001258877, 8.154931e-05, 5.342579e-05, 2.984598e-05, 1.645241e-05, 8.64197e-06, 4.127951e-06,
     2.197614e-06, 6.830423e-07, 5.048573e-07, 2.375799e-07, 2.672774e-07, 2.078824e-07, 8.909247e-08, 1.484875e-07,
     1.484875e-07, 1.781849e-07, 5.939498e-08, 1.1879e-07, 1.781849e-07, 2.078824e-07, 8.909247e-08, 1.1879e-07,
     8.909247e-08, 3.266724e-07, 2.078824e-07, 2.078824e-07, 1.781849e-07, 1.781849e-07, 8.909247e-08, 2.078824e-07,
     8.909247e-08, 8.909247e-08, 2.078824e-07, 1.1879e-07, 1.484875e-07, 2.078824e-07, 2.078824e-07, 1.1879e-07,
     2.078824e-07, 1.1879e-07, 2.078824e-07, 1.781849e-07])

# y1_E_0_weights = np.array(
#     [6.16794e-09, 7.812724e-09, 8.22392e-09, 8.121121e-09, 9.663106e-09, 8.429518e-09, 8.326719e-09, 9.765905e-09,
#      9.046312e-09, 1.120509e-08, 1.06911e-08, 1.110229e-08, 9.560307e-09, 9.765905e-09, 1.03827e-08, 1.120509e-08,
#      1.161629e-08, 1.377507e-08, 1.387786e-08, 1.192468e-08, 1.295267e-08, 1.593384e-08, 1.727023e-08, 1.994301e-08,
#      1.665344e-08, 1.829822e-08, 2.01486e-08, 1.994301e-08, 2.220458e-08, 2.210178e-08, 2.600815e-08, 3.05313e-08,
#      3.09425e-08, 3.526006e-08, 3.669924e-08, 4.235319e-08, 4.502596e-08, 5.684785e-08, 6.466057e-08, 7.319289e-08,
#      8.090281e-08, 9.765905e-08, 1.214056e-07, 1.377507e-07, 1.68796e-07, 2.069344e-07, 2.472316e-07, 2.914352e-07,
#      3.380031e-07, 3.549649e-07, 3.997853e-07, 4.203451e-07, 4.225039e-07, 4.083176e-07, 3.900194e-07, 3.607217e-07,
#      3.076774e-07, 2.64913e-07, 2.238962e-07, 1.949069e-07, 1.485446e-07, 1.233588e-07, 1.035186e-07, 8.24448e-08,
#      6.712775e-08, 5.571706e-08, 4.841833e-08, 4.368957e-08, 3.176489e-08, 3.248448e-08, 2.580255e-08, 2.323257e-08,
#      2.107379e-08, 1.788703e-08, 1.696183e-08, 1.583105e-08, 1.326107e-08, 1.192468e-08, 1.254148e-08, 1.00743e-08,
#      8.22392e-09, 8.943513e-09, 7.812724e-09, 8.326719e-09, 7.915523e-09, 7.093131e-09, 6.373538e-09, 5.653945e-09,
#      6.16794e-09, 4.831553e-09, 5.551146e-09, 4.009161e-09, 3.392367e-09, 5.756744e-09, 3.597965e-09, 3.495166e-09,
#      4.214759e-09, 4.214759e-09, 4.728754e-09, 4.009161e-09])

print(xData.shape,xBinning.shape)
def half_width(bins,weights):
    sum = np.sum(weights)
    for i in range(1,50):
        if np.sum(weights[49-i]+weights[50+i])<(weights[49]+weights[50])/2:
            print(i)
            print(xBinning[50+(i-1)]-xBinning[50-(i-1)])
            break

# half_width(bins=xBinning,weights=y1_E_0_weights)
bins2 = np.linspace(140,160,101,endpoint=True)
y2_M_0_weights = np.array(
    [3.593396e-06, 2.940052e-06, 2.316404e-06, 3.237026e-06, 2.494589e-06, 3.444909e-06, 3.118237e-06, 2.850959e-06,
     3.147934e-06, 3.534001e-06, 4.127951e-06, 3.534001e-06, 3.801279e-06, 4.335834e-06, 4.217044e-06, 4.217044e-06,
     3.860674e-06, 4.424926e-06, 4.424926e-06, 4.484321e-06, 4.929783e-06, 4.929783e-06, 5.969196e-06, 5.761313e-06,
     5.642523e-06, 6.592843e-06, 6.206776e-06, 6.652238e-06, 6.86012e-06, 8.731062e-06, 7.632255e-06, 8.52318e-06,
     9.503197e-06, 9.978357e-06, 1.173051e-05, 1.282932e-05, 1.464086e-05, 1.594755e-05, 2.025369e-05, 2.322344e-05,
     2.669804e-05, 3.572608e-05, 4.629839e-05, 5.856345e-05, 7.011578e-05, 8.745911e-05, 0.0001060497, 0.000126541,
     0.0002135844, 0.0005423653, 0.0005034913, 0.000153833, 8.885489e-05, 7.477828e-05, 5.92168e-05, 4.683294e-05,
     3.605275e-05, 2.408466e-05, 1.603664e-05, 1.119595e-05, 7.988625e-06, 4.603111e-06, 3.058842e-06, 1.781849e-06,
     6.830423e-07, 6.533448e-07, 3.563699e-07, 2.672774e-07, 1.1879e-07, 0.0, 0.0, 5.939498e-08, 0.0, 1.1879e-07, 0.0,
     2.969749e-08, 2.969749e-08, 2.969749e-08, 2.969749e-08, 0.0, 2.969749e-08, 0.0, 2.969749e-08, 5.939498e-08,
     2.969749e-08, 0.0, 2.969749e-08, 5.939498e-08, 0.0, 2.969749e-08, 2.969749e-08, 0.0, 2.969749e-08, 0.0, 0.0,
     2.969749e-08, 5.939498e-08, 0.0, 0.0, 0.0])

y2_M_0_weights2 = np.array(
    [1.141069e-08, 1.141069e-08, 1.315827e-08, 1.336387e-08, 1.398066e-08, 1.336387e-08, 1.531705e-08, 1.459746e-08,
     1.829822e-08, 1.541985e-08, 1.634504e-08, 1.840102e-08, 1.675624e-08, 1.901781e-08, 2.127939e-08, 2.03542e-08,
     2.189619e-08, 2.446616e-08, 2.477456e-08, 2.446616e-08, 2.662494e-08, 2.559695e-08, 2.621374e-08, 3.07369e-08,
     3.690484e-08, 3.279288e-08, 3.711044e-08, 3.762443e-08, 4.194199e-08, 4.173639e-08, 4.882952e-08, 5.057711e-08,
     6.003462e-08, 5.571706e-08, 6.589416e-08, 7.442647e-08, 8.25476e-08, 8.635116e-08, 9.313589e-08, 1.054718e-07,
     1.23256e-07, 1.380591e-07, 1.476194e-07, 1.65198e-07, 1.725995e-07, 1.912061e-07, 2.017944e-07, 2.151583e-07,
     2.319145e-07, 2.236906e-07, 2.280082e-07, 2.202983e-07, 2.110463e-07, 1.967573e-07, 1.885334e-07, 1.620112e-07,
     1.41657e-07, 1.328163e-07, 1.185272e-07, 1.045466e-07, 9.539747e-08, 8.830434e-08, 7.22677e-08, 7.278169e-08,
     5.941782e-08, 5.499746e-08, 5.211909e-08, 4.512876e-08, 4.605395e-08, 3.423207e-08, 3.947482e-08, 3.06341e-08,
     2.970891e-08, 3.022291e-08, 2.631654e-08, 2.662494e-08, 2.467176e-08, 2.333537e-08, 1.809262e-08, 1.840102e-08,
     1.706463e-08, 1.912061e-08, 1.634504e-08, 1.870942e-08, 1.336387e-08, 1.531705e-08, 1.264428e-08, 1.243868e-08,
     1.326107e-08, 1.079389e-08, 1.284987e-08, 1.05883e-08, 1.01771e-08, 9.457508e-09, 9.868704e-09, 8.840714e-09,
     8.018322e-09, 9.354709e-09, 7.298729e-09, 7.401528e-09])

half_width(bins2,y2_M_0_weights)
half_width(bins2,y2_M_0_weights2)
